{
  "info": {
    "name": "Restful Booker Platform - API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /room",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3001/room",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "room"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Body contains rooms\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.rooms).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /room (valid)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/room",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "room"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"roomName\": \"203\",\n  \"type\": \"double\",\n  \"accessible\": true,\n  \"image\": \"/images/room3.jpg\",\n  \"description\": \"Quarto novo para testes\",\n  \"features\": [\n    \"WiFi\",\n    \"TV\"\n  ],\n  \"roomPrice\": 250\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response body is not empty\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.not.be.empty;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /room (invalid)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/room",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "room"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"single\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Teste esperando falhar devido \u00e0 falta de valida\u00e7\u00e3o na API",
              "pm.test(\"Should return 400 for invalid data (API does not validate)\", function () {",
              "    pm.expect(pm.response.code).to.eql(400);",
              "});",
              "",
              "// Fallback se n\u00e3o retornar 400",
              "if (pm.response.code === 200) {",
              "    var jsonData = pm.response.json();",
              "    pm.test(\"Fallback: roomName should not exist\", function () {",
              "        pm.expect(jsonData.roomName).to.not.exist;",
              "    });",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /room/1",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3001/room/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "room",
            "1"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"roomName\": \"101 Atualizado\",\n  \"type\": \"suite\",\n  \"accessible\": true,\n  \"image\": \"/images/room2.jpg\",\n  \"description\": \"Atualiza\\u00e7\\u00e3o de quarto\",\n  \"features\": [\n    \"WiFi\",\n    \"TV\",\n    \"Safe\"\n  ],\n  \"roomPrice\": 300\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"PUT request should return 200 (currently returns 400)\", function () {",
              "    pm.expect(pm.response.code).to.eql(200); // Falha esperada, API pode estar quebrada",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /room/1",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "http://localhost:3001/room/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3001",
          "path": [
            "room",
            "1"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Espera-se que o DELETE exija autentica\u00e7\u00e3o",
              "pm.test(\"DELETE /room/1 returns 403 (expected due to lack of auth)\", function () {",
              "    pm.expect(pm.response.code).to.eql(403);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}